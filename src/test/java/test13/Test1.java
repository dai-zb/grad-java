package test13;

import com.dzb.math.auto2.Variable;
import com.dzb.math.auto2.func.MaxPoolingFunc;
import com.dzb.math.auto2.func.toScalar.SumFunc;
import org.jblas.DoubleMatrix;
import org.junit.Test;

/**
 * <p>
 * Description:
 * </p>
 *
 * @author DZB
 * @create 2021-06-06 15:01
 */
public class Test1 {
    @Test
    public void test1() {
        int inC = 2;

        DoubleMatrix x = DoubleMatrix.linspace(1, 2 * 2 * 4 * 4, 2 * 2 * 4 * 4);
        x.reshape(inC, 2 * 4 * 4);

        System.out.println(x.toString("%.4f", "[", "]", ", ", "\n"));
        /*
        [1.0000, 3.0000, 5.0000, 7.0000, 9.0000, 11.0000,
        2.0000, 4.0000, 6.0000, 8.0000, 10.0000, 12.0000,
         */
        Variable X = new Variable(x);

        Variable Y = new MaxPoolingFunc(X, 2, 2, 4, 4).toVar();

        Variable l = new SumFunc(Y).toVar();
        l.forward();

        System.out.println(Y.getValue().toString("%.4f", "[", "]", ", ", "\n"));
        /*
        [11.0000, 15.0000, 27.0000, 31.0000, 43.0000, 47.0000, 59.0000, 63.0000
        12.0000, 16.0000, 28.0000, 32.0000, 44.0000, 48.0000, 60.0000, 64.0000]
         */

        l.backward();

        System.out.println(Y.getGrad().toString("%.4f", "[", "]", ", ", "\n"));
        /*
        [1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]
         */

        System.out.println(X.getGrad().toString("%.4f", "[", "]", ", ", "\n"));
        /*
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000]
         */

        DoubleMatrix t = x.mul(X.getGrad());
        System.out.println(t.toString("%.4f", "[", "]", ", ", "\n"));
        /*
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 11.0000, 0.0000, 15.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 27.0000, 0.0000, 31.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 43.0000, 0.0000, 47.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 59.0000, 0.0000, 63.0000
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 12.0000, 0.0000, 16.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 28.0000, 0.0000, 32.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 44.0000, 0.0000, 48.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 60.0000, 0.0000, 64.0000]
         */
    }

    @Test
    public void test2() {
        int inB = 3;
        int inC = 3;
        int inH = 5;
        int inW = 5;

        DoubleMatrix x = DoubleMatrix.linspace(1, inB * inC * inH * inW, inB * inC * inH * inW);
        x.reshape(inB, inC * inH * inW);

        System.out.println(x.toString("%.0f", "[", "]", ", ", "\n"));
        /*
        [1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34, 37, 40, 43, 46, 49, 52,
        2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53,
        3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54,
         */
        Variable X = new Variable(x);

        Variable Y = new MaxPoolingFunc(X, inB, inC, inH, inW).toVar();

        Variable l = new SumFunc(Y).toVar();
        l.forward();

        System.out.println(Y.getValue().toString("%.0f", "[", "]", ", ", "\n"));
        /*
        [19, 25, 49, 55, 94, 100, 124, 130, 169, 175, 199, 205
        20, 26, 50, 56, 95, 101, 125, 131, 170, 176, 200, 206
        21, 27, 51, 57, 96, 102, 126, 132, 171, 177, 201, 207]
         */

        l.backward();

        System.out.println(Y.getGrad().toString("%.0f", "[", "]", ", ", "\n"));

        System.out.println(X.getGrad().toString("%.0f", "[", "]", ", ", "\n"));
        /*
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 1.0000]
         */

        DoubleMatrix t = x.mul(X.getGrad());
        System.out.println(t.toString("%.0f", "[", "]", ", ", "\n"));
        /*
        [0, 0, 0, 0, 0, 0, 19, 0, 25, 0, 0, 0, 0, 0, 0, 0, 49, 0, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 0, 100, 0, 0, 0, 0, 0, 0, 0, 124, 0, 130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 169, 0, 175, 0, 0, 0, 0, 0, 0, 0, 199, 0, 205, 0, 0, 0, 0, 0, 0
        0, 0, 0, 0, 0, 0, 20, 0, 26, 0, 0, 0, 0, 0, 0, 0, 50, 0, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95, 0, 101, 0, 0, 0, 0, 0, 0, 0, 125, 0, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 170, 0, 176, 0, 0, 0, 0, 0, 0, 0, 200, 0, 206, 0, 0, 0, 0, 0, 0
        0, 0, 0, 0, 0, 0, 21, 0, 27, 0, 0, 0, 0, 0, 0, 0, 51, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 0, 102, 0, 0, 0, 0, 0, 0, 0, 126, 0, 132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 171, 0, 177, 0, 0, 0, 0, 0, 0, 0, 201, 0, 207, 0, 0, 0, 0, 0, 0]
         */
    }
}
